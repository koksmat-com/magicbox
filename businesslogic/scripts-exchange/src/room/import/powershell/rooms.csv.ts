
    /*
    Generated by parsecsv.ts

    1. Copy the file to the parent folder

    2. Copy the following snippet into the script class:  
    
  import {inputType} from "./rooms.csv"
  import {room as itemClass} from "@koksmat/schemas"

  const item = itemClass.view
  type targetType = z.infer<typeof item>
  static mapCSV(input:inputType) : targetType {
    const target : targetType = {
    displayName : input.DisplayName,
name : input.Name,
mailTip : input.MailTip,
resourceType : input.ResourceType,
primarySmtpAddress : input.PrimarySmtpAddress,
whenCreatedUTC : input.WhenCreatedUTC,
resourceCapacity : input.ResourceCapacity,
alias : input.Alias,
    }
    return target;
  }
    */

import { z } from "zod";


  const inputRecord = z.object({


  DisplayName:z.string().trim().openapi({ example: "Conf Room Baker" }),
Name:z.string().trim().openapi({ example: "Conf Room Baker" }),
MailTip:z.string().trim().openapi({ example: "" }),
ResourceType:z.string().trim().openapi({ example: "Room" }),
PrimarySmtpAddress:z.string().trim().openapi({ example: "Baker@M365x65867376.OnMicrosoft.com" }),
WhenCreatedUTC:z.string().trim().openapi({ example: "2023-03-24 10:30:43" }),
ResourceCapacity:z.string().trim().openapi({ example: "" }),
Alias:z.string().trim().openapi({ example: "Baker" }),
})

export type inputType = z.infer<typeof inputRecord>


    